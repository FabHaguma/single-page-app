<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Can I Drive? - Rwanda BAC Calculator</title>
    <style>
        html, body {
            height: 100%; margin: 0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #e9ecef; display: flex; justify-content: center; align-items: center;
        }
        .app-container {
            display: flex; width: 95%; max-width: 1450px; height: 90vh; min-height: 720px;
            background-color: #f8f9fa; border-radius: 10px; box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            overflow: hidden; padding: 10px; gap: 10px; box-sizing: border-box;
        }
        .column {
            flex: 1; background-color: #ffffff; padding: 20px; border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05); display: flex; flex-direction: column;
            overflow-y: auto; box-sizing: border-box;
        }
        .column h2 {
            text-align: center; color: #343a40; margin-top: 0; margin-bottom: 20px;
            font-size: 1.4em; border-bottom: 2px solid #dee2e6; padding-bottom: 10px;
        }
        .column h3 {
            margin-top:20px; margin-bottom:10px; font-size: 1.1em; color: #343a40;
            border-bottom: 1px solid #e9ecef; padding-bottom: 5px;
        }
        .input-group { margin-bottom: 15px; }
        .input-group label {
            display: block; margin-bottom: 6px; font-weight: 600; color: #495057; font-size: 0.9em;
        }
        .input-group input[type="number"], .input-group select {
            width: 100%; padding: 10px; border: 1px solid #ced4da; border-radius: 5px;
            font-size: 0.95em; box-sizing: border-box;
        }
        .stepper { display: flex; align-items: center; }
        .stepper input[type="number"] { text-align: center; flex-grow: 1; margin: 0 5px; -moz-appearance: textfield; }
        .stepper input[type="number"]::-webkit-outer-spin-button,
        .stepper input[type="number"]::-webkit-inner-spin-button { -webkit-appearance: none; margin: 0; }
        .stepper-button {
            background-color: #e9ecef; border: 1px solid #ced4da; color: #495057;
            font-size: 1em; font-weight: bold; cursor: pointer; border-radius: 5px;
            width: 36px; height: 40px; line-height: 40px; text-align: center; flex-shrink: 0;
        }
        .stepper-button:hover { background-color: #dee2e6; }

        /* Manual Drink Input Row Styling */
        .manual-drink-inputs-row {
            display: flex;
            flex-wrap: wrap; /* Allow wrapping on smaller screens */
            gap: 10px; /* Space between input groups */
            margin-bottom: 10px;
        }
        .manual-drink-inputs-row .input-group {
            flex: 1; /* Distribute space among items */
            min-width: 120px; /* Minimum width before wrapping */
            margin-bottom: 0; /* Remove bottom margin as gap handles it */
        }
         .manual-drink-inputs-row .input-group label { font-size: 0.85em; margin-bottom: 4px; }
         .manual-drink-inputs-row .input-group input[type="number"] { font-size: 0.9em; padding: 8px;}


        .button {
            display: block; width: 100%; padding: 11px; color: white;
            border: none; border-radius: 5px; font-size: 1em; font-weight: 500;
            cursor: pointer; text-align: center; margin-top: 10px;
            transition: background-color 0.2s ease-in-out; box-sizing: border-box;
        }
        .button.add-drink-button { background-color: #28a745; }
        .button.add-drink-button:hover { background-color: #218838; }
        .button.add-preset-button { background-color: #007bff; margin-top:10px; }
        .button.add-preset-button:hover { background-color: #0056b3; }
        .calculate-button {
            background-color: #dc3545; margin-top: 0; font-size: 1.1em; padding: 14px;
        }
        .calculate-button:hover { background-color: #c82333; }
        
        #drinkListContainer {
            flex-grow: 1; overflow-y: auto; min-height: 80px; max-height: 250px;
            border: 1px solid #dee2e6; border-radius: 5px; padding: 10px;
            margin-bottom: 15px; background-color: #f8f9fa;
        }
        #drinkList { list-style-type: none; padding: 0; margin:0; }
        #drinkList li {
            background-color: #e9ecef; padding: 7px 10px; margin-bottom: 5px;
            border-radius: 4px; display: flex; justify-content: space-between;
            align-items: center; font-size: 0.85em;
        }
        #drinkList .remove-drink {
            background-color: #6c757d; color: white; border: none; border-radius: 3px;
            padding: 3px 7px; font-size: 0.75em; cursor: pointer; margin-left: 8px;
        }
        #drinkList .remove-drink:hover { background-color: #5a6268; }
        #noDrinksText { text-align:center; color: #6c757d; font-style: italic; padding:10px;}

        .result-section-content { text-align: center; margin-top: 15px; }
        .dual-result-container { display: flex; flex-direction: column; gap: 15px; }
        .dual-result {
            border: 1px solid #dee2e6; border-radius: 5px; padding: 10px; background-color: #fdfdff;
        }
        .dual-result h4 { margin-top: 0; margin-bottom: 8px; font-size: 1em; color: #495057; text-align: left; }
        .bac-value-display {
            font-size: 1.8em; font-weight: bold; margin-bottom: 8px; padding: 8px;
            border-radius: 5px; display: block;
        }
        .bac-safe { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .bac-caution { background-color: #fff3cd; color: #856404; border: 1px solid #ffeeba; }
        .bac-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .bac-message-text { font-size: 0.9em; color: #495057; margin-bottom: 10px; line-height: 1.4; text-align: left; }
        .info-text { font-size: 0.8em; color: #6c757d; margin-top: 5px; text-align: left; line-height: 1.3; }
        
        .results-column-footer { margin-top: auto; padding-top: 15px; }
        .footer-disclaimer {
            font-size: 0.7em; color: #6c757d; border-top: 1px solid #dee2e6;
            padding-top: 10px; line-height: 1.3; text-align: center;
        }

        @media (min-width: 1100px) {
            .dual-result-container { flex-direction: row; align-items: stretch; }
            .dual-result { flex: 1; }
        }
        @media (max-width: 900px) { 
            html, body { align-items: flex-start; height: auto; }
            .app-container { flex-direction: column; height: auto; width: 95%; max-width: 550px; margin: 20px auto; }
            .column { flex: none; width: 100%; margin-bottom: 10px; max-height: none; overflow-y: visible; }
            .app-container { overflow: visible; }
            .manual-drink-inputs-row { flex-direction: column; /* Stack manual inputs on smaller screens */ }
            .manual-drink-inputs-row .input-group { min-width: unset; width: 100%; margin-bottom:10px;}
            #drinkListContainer { max-height: 180px; }
            .column h2 { font-size: 1.3em; }
            .bac-value-display { font-size: 1.6em; }
            .results-column-footer { margin-top: 20px; }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Column 1: Your Details & Quick Add -->
        <div class="column" id="personalInfoColumn">
            <h2>Your Details</h2>
            <div class="input-group">
                <label for="weight">Your Weight (kg)</label>
                <div class="stepper">
                    <button class="stepper-button" onclick="updateStepper('weight', -5, 30, 250, 5)">-</button>
                    <input type="number" id="weight" value="70" min="30" max="250" step="5">
                    <button class="stepper-button" onclick="updateStepper('weight', 5, 30, 250, 5)">+</button>
                </div>
            </div>
            <div class="input-group">
                <label for="time">Time Since First Drink (Hours)</label>
                 <div class="stepper">
                    <button class="stepper-button" onclick="updateStepper('time', -0.5, 0, 24, 0.5)">-</button>
                    <input type="number" id="time" value="1" min="0" max="24" step="0.5">
                    <button class="stepper-button" onclick="updateStepper('time', 0.5, 0, 24, 0.5)">+</button>
                </div>
            </div>

            <h3 style="margin-top: 25px;">Quick Add Common Drinks</h3>
            <div class="input-group">
                <label for="presetDrink">Select a preset:</label>
                <select id="presetDrink">
                    <option value="">-- Choose a drink --</option>
                    <option value='{"name":"Primus", "size":500, "abv":5}'>Primus Beer (500ml, 5%)</option>
                    <option value='{"name":"Mützig", "size":500, "abv":5}'>Mützig Beer (500ml, 5%)</option>
                    <option value='{"name":"Skol", "size":500, "abv":5}'>Skol Lager (500ml, 5%)</option>
                    <option value='{"name":"Waragi", "size":40, "abv":40}'>Waragi (Shot 40ml, 40%)</option>
                    <option value='{"name":"Amarula", "size":50, "abv":17}'>Amarula (50ml, 17%)</option>
                </select>
            </div>
            <div class="input-group">
                <label for="presetQuantity">Quantity for Preset:</label>
                <input type="number" id="presetQuantity" value="1" min="1">
            </div>
            <button class="button add-preset-button" onclick="addSelectedPreset()">+ Add Selected Preset Drink(s)</button>
        </div>

        <!-- Column 2: Add Drinks Manually & List -->
        <div class="column" id="drinksColumn">
            <h2>Manage Drinks</h2>
            <h3>Add Drink Manually</h3>
            <div class="manual-drink-inputs-row">
                <div class="input-group">
                    <label for="numDrinks">Number of drinks</label>
                    <input type="number" id="numDrinks" value="1" min="1" placeholder="e.g., 1">
                </div>
                <div class="input-group">
                    <label for="glassSize">Serving Size (ml)</label>
                    <input type="number" id="glassSize" value="330" min="1" placeholder="e.g., 330">
                </div>
                <div class="input-group">
                    <label for="abv">ABV (%)</label>
                    <input type="number" id="abv" value="5" min="0.1" step="0.1" placeholder="e.g., 5">
                </div>
            </div>
            <button class="button add-drink-button" onclick="addManualDrink()">+ Add Manual Drink(s)</button>
            
            <h3>Consumed Drinks</h3>
            <div id="drinkListContainer">
                <ul id="drinkList"></ul>
                <p id="noDrinksText">No drinks added yet.</p>
            </div>
        </div>

        <!-- Column 3: Results -->
        <div class="column" id="resultsColumn">
            <h2>Estimated BAC</h2>
            <button class="button calculate-button" onclick="calculateBAC()">Calculate BAC</button>
            <div class="result-section-content" style="margin-top: 15px; display: none;"> 
                <div class="dual-result-container">
                    <div class="dual-result">
                        <h4>For Male Physiology:</h4>
                        <div id="bacResultDisplayMale" class="bac-value-display">0.000%</div>
                        <div id="bacMessageMale" class="bac-message-text"></div>
                        <p class="info-text">Est. time to sober: <span id="timeToSoberMale">N/A</span></p>
                    </div>
                    <div class="dual-result">
                        <h4>For Female Physiology:</h4>
                        <div id="bacResultDisplayFemale" class="bac-value-display">0.000%</div>
                        <div id="bacMessageFemale" class="bac-message-text"></div>
                        <p class="info-text">Est. time to sober: <span id="timeToSoberFemale">N/A</span></p>
                    </div>
                </div>
                <p class="info-text" style="text-align:center; margin-top:15px;">Legal BAC limit in Rwanda for driving: <strong>0.08%</strong>. <br>Any alcohol can impair driving.</p>
            </div>
            <div class="results-column-footer">
                <div class="footer-disclaimer">
                    <p><strong>Disclaimer:</strong> This is an estimate for informational purposes. Individual results vary. Factors like food, metabolism, health, & medication affect BAC. <strong>DO NOT use this to determine fitness to drive.</strong> Safe driving BAC is 0.00%. Never drink & drive.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        let drinks = [];
        const ALCOHOL_DENSITY = 0.789; // g/ml
        const ELIMINATION_RATE = 0.015; // % per hour

        function updateStepper(inputId, change, min = null, max = null, stepVal = 1) {
            const input = document.getElementById(inputId);
            let currentValue = parseFloat(input.value);
            if (isNaN(currentValue)) { currentValue = (min !== null && min > 0) ? min : 0; }
            let newValue = currentValue + change;
            if (min !== null) newValue = Math.max(min, newValue);
            if (max !== null) newValue = Math.min(max, newValue);
            if (stepVal.toString().includes('.')) { newValue = parseFloat(newValue.toFixed(1)); }
            else {
                 newValue = Math.round(newValue / stepVal) * stepVal;
                 if (min !== null) newValue = Math.max(min, newValue);
                 if (max !== null) newValue = Math.min(max, newValue);
            }
            input.value = newValue;
        }
        
        function addSelectedPreset() {
            const presetSelect = document.getElementById('presetDrink');
            const presetQuantityInput = document.getElementById('presetQuantity');
            if (!presetSelect.value) {
                alert("Please select a preset drink from the list.");
                return;
            }
            const quantity = parseInt(presetQuantityInput.value);
            if (isNaN(quantity) || quantity <=0) {
                alert("Please enter a valid quantity for the preset drink.");
                return;
            }

            try {
                const presetData = JSON.parse(presetSelect.value);
                const totalSize = presetData.size * quantity;
                
                drinks.push({
                    size: totalSize, // Aggregated size
                    abv: presetData.abv,
                    description: `${quantity} x ${presetData.name} (${totalSize}ml total @ ${presetData.abv}%)`
                });
                
                renderDrinkList();
                presetSelect.value = ""; 
                presetQuantityInput.value = "1"; // Reset quantity
            } catch (e) {
                console.error("Error parsing preset data:", e);
                alert("There was an error adding the preset drink.");
            }
        }

        function addManualDrink() {
            const numDrinks = parseInt(document.getElementById('numDrinks').value);
            const glassSize = parseFloat(document.getElementById('glassSize').value);
            const abv = parseFloat(document.getElementById('abv').value);

            if (isNaN(numDrinks) || numDrinks <= 0 || isNaN(glassSize) || glassSize <= 0 || isNaN(abv) || abv < 0) {
                alert("Please enter valid positive numbers for all manual drink fields (ABV can be 0 or more).");
                return;
            }
            // For manual drinks, if numDrinks > 1, we are adding 'numDrinks' of 'glassSize'
            // The BAC formula expects total alcohol. So, we add one entry representing the total for this batch.
            const totalVolumeForThisEntry = numDrinks * glassSize;
            drinks.push({ 
                size: totalVolumeForThisEntry, 
                abv: abv, 
                description: `${numDrinks} x ${glassSize}ml @ ${abv}% ABV (Manual)` 
            });
            
            renderDrinkList();
             // Optionally clear manual inputs
            document.getElementById('numDrinks').value = 1;
            // document.getElementById('glassSize').value = ""; // Or a default
            // document.getElementById('abv').value = ""; // Or a default
        }

        function removeDrink(index) {
            drinks.splice(index, 1);
            renderDrinkList();
        }

        function renderDrinkList() {
            const drinkListEl = document.getElementById('drinkList');
            const noDrinksText = document.getElementById('noDrinksText');
            const resultSectionContent = document.querySelector('.result-section-content');
            drinkListEl.innerHTML = ''; 
            if (drinks.length === 0) {
                noDrinksText.style.display = 'block';
            } else {
                noDrinksText.style.display = 'none';
                drinks.forEach((drink, index) => {
                    const li = document.createElement('li');
                    li.textContent = `${index + 1}. ${drink.description}`;
                    const removeButton = document.createElement('button');
                    removeButton.textContent = 'Remove';
                    removeButton.className = 'remove-drink';
                    removeButton.onclick = () => removeDrink(index);
                    li.appendChild(removeButton);
                    drinkListEl.appendChild(li);
                });
            }
            if (resultSectionContent) resultSectionContent.style.display = 'none';
        }

        function calculateBAC() {
            const weightKg = parseFloat(document.getElementById('weight').value);
            const timeHours = parseFloat(document.getElementById('time').value);
            const resultSectionContent = document.querySelector('.result-section-content');

            if (isNaN(weightKg) || weightKg <= 0) {
                alert("Please enter a valid weight.");
                if (resultSectionContent) resultSectionContent.style.display = 'none';
                return;
            }
            if (drinks.length === 0) {
                alert("Please add at least one drink.");
                if (resultSectionContent) resultSectionContent.style.display = 'none';
                return;
            }

            const weightGrams = weightKg * 1000;
            let totalAlcoholGrams = 0;
            drinks.forEach(drink => {
                // Each 'drink' object in the array now represents either a single preset batch or a single manual batch
                // 'drink.size' is the total volume of liquid for that batch (e.g., 3 shots of Waragi = 120ml, or 2 beers of 500ml = 1000ml)
                // 'drink.abv' is the alcohol percentage of that liquid
                const alcoholVolumeMl = drink.size * (drink.abv / 100);
                totalAlcoholGrams += alcoholVolumeMl * ALCOHOL_DENSITY;
            });

            const r_male = 0.68;
            const r_female = 0.55;

            let bacMale = (totalAlcoholGrams / (weightGrams * r_male)) * 100;
            bacMale -= (ELIMINATION_RATE * timeHours);
            bacMale = Math.max(0, bacMale); 

            let bacFemale = (totalAlcoholGrams / (weightGrams * r_female)) * 100;
            bacFemale -= (ELIMINATION_RATE * timeHours);
            bacFemale = Math.max(0, bacFemale); 

            displayDualResult(bacMale, bacFemale);
        }

        function displayDualResult(bacMale, bacFemale) {
            const resultSectionContent = document.querySelector('.result-section-content');
            if (!resultSectionContent) return; 
            resultSectionContent.style.display = 'block';

            // --- Male Result ---
            const bacDisplayMale = document.getElementById('bacResultDisplayMale');
            const messageDisplayMale = document.getElementById('bacMessageMale');
            const timeToSoberDisplayMale = document.getElementById('timeToSoberMale');
            
            bacDisplayMale.textContent = `${bacMale.toFixed(3)}%`;
            bacDisplayMale.className = 'bac-value-display'; 
            if (bacMale === 0) { bacDisplayMale.classList.add('bac-safe'); messageDisplayMale.textContent = "Likely sober. If alcohol was consumed recently, effects might linger.";
            } else if (bacMale < 0.03) { bacDisplayMale.classList.add('bac-safe'); messageDisplayMale.textContent = "BAC is very low. Caution advised as any alcohol can affect coordination.";
            } else if (bacMale < 0.08) { bacDisplayMale.classList.add('bac-caution'); messageDisplayMale.textContent = "BAC in caution zone. Impairment is likely. DO NOT DRIVE.";
            } else { bacDisplayMale.classList.add('bac-danger'); messageDisplayMale.textContent = "BAC is high, likely over legal limit. DO NOT DRIVE."; }
            if (bacMale > 0) {
                const hoursToSober = bacMale / ELIMINATION_RATE; 
                let hours = Math.floor(hoursToSober); let minutes = Math.round((hoursToSober - hours) * 60);
                if (minutes === 60) { hours++; minutes = 0; }
                timeToSoberDisplayMale.textContent = `${hours} hr ${minutes} min (approx.)`;
            } else { timeToSoberDisplayMale.textContent = "0 hr 0 min"; }

            // --- Female Result ---
            const bacDisplayFemale = document.getElementById('bacResultDisplayFemale');
            const messageDisplayFemale = document.getElementById('bacMessageFemale');
            const timeToSoberDisplayFemale = document.getElementById('timeToSoberFemale');

            bacDisplayFemale.textContent = `${bacFemale.toFixed(3)}%`;
            bacDisplayFemale.className = 'bac-value-display';
            if (bacFemale === 0) { bacDisplayFemale.classList.add('bac-safe'); messageDisplayFemale.textContent = "Likely sober. If alcohol was consumed recently, effects might linger.";
            } else if (bacFemale < 0.03) { bacDisplayFemale.classList.add('bac-safe'); messageDisplayFemale.textContent = "BAC is very low. Caution advised as any alcohol can affect coordination.";
            } else if (bacFemale < 0.08) { bacDisplayFemale.classList.add('bac-caution'); messageDisplayFemale.textContent = "BAC in caution zone. Impairment is likely. DO NOT DRIVE.";
            } else { bacDisplayFemale.classList.add('bac-danger'); messageDisplayFemale.textContent = "BAC is high, likely over legal limit. DO NOT DRIVE."; }
            if (bacFemale > 0) {
                const hoursToSober = bacFemale / ELIMINATION_RATE; 
                let hours = Math.floor(hoursToSober); let minutes = Math.round((hoursToSober - hours) * 60);
                if (minutes === 60) { hours++; minutes = 0; }
                timeToSoberDisplayFemale.textContent = `${hours} hr ${minutes} min (approx.)`;
            } else { timeToSoberDisplayFemale.textContent = "0 hr 0 min"; }
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            renderDrinkList(); 
            const resultSectionContent = document.querySelector('.result-section-content');
            if (resultSectionContent) resultSectionContent.style.display = 'none';
        });
    </script>
</body>
</html>
